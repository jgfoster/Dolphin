| package |
package := Package name: 'STON-Tests'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{IdentityBag}
	#{STONCStyleCommentsSkipStreamTest}
	#{STONJSONTest}
	#{STONLargeWriteReadTest}
	#{STONReaderTest}
	#{STONTest}
	#{STONTestAssociation}
	#{STONTestDomainObject}
	#{STONTestKnownObject}
	#{STONTestMap}
	#{STONTestUser}
	#{STONTestUser2}
	#{STONTestUser3}
	#{STONWriteAsciiOnlyReadTest}
	#{STONWritePrettyPrinterReadTest}
	#{STONWriteReadCommentsTest}
	#{STONWriteReadTest}
	#{STONWriterTest}
	#{UUID}
).

package setMethodNames: #(
	#(#{Date} #translateTo:)
	#(#{Date} #translateToUTC)
).

package setPrerequisites: #(
	'..\..\..\Object Arts\Dolphin\Base\Dolphin'
	'..\..\..\Object Arts\Dolphin\Base\Dolphin Anonymous Classes'
	'..\..\..\Object Arts\Dolphin\MVP\Base\Dolphin Basic Geometry'
	'..\..\..\Object Arts\Dolphin\Base\Dolphin Collection Arithmetic'
	'..\..\..\Object Arts\Dolphin\Base\Dolphin Legacy Date & Time'
	'..\..\..\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base'
	'STON-Core'
	'..\..\Camp Smalltalk\SUnit\SUnit'
).

package setManualPrerequisites: #(
	'Dolphin Anonymous Classes'
	'Dolphin Collection Arithmetic'
).

package!

"Class Definitions"!

Object subclass: #STONTestDomainObject
	instanceVariableNames: 'created modified integer float description color tags bytes boolean'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Object subclass: #STONTestKnownObject
	instanceVariableNames: 'id description'
	classVariableNames: 'KnownObjects'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Object subclass: #STONTestUser
	instanceVariableNames: 'username password enabled'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Bag subclass: #IdentityBag
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Dictionary variableSubclass: #STONTestMap
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GUID variableByteSubclass: #UUID
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Association subclass: #STONTestAssociation
	instanceVariableNames: 'timestamp'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
STONTestUser subclass: #STONTestUser2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
STONTestUser subclass: #STONTestUser3
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestCase subclass: #STONCStyleCommentsSkipStreamTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestCase subclass: #STONJSONTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestCase subclass: #STONReaderTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestCase subclass: #STONTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestCase subclass: #STONWriteReadTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
TestCase subclass: #STONWriterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
STONWriteReadTest subclass: #STONLargeWriteReadTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
STONWriteReadTest subclass: #STONWriteAsciiOnlyReadTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
STONWriteReadTest subclass: #STONWritePrettyPrinterReadTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
STONWriteReadTest subclass: #STONWriteReadCommentsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!Date methodsFor!

translateTo: aDuration
	"Private - This probably isn't correct, but then Dolphin's legacy Dates are not TZ aware. This is implemented purely to make the STON tests pass."

	^(DateAndTime
		year: self year
		day: self dayOfYear
		offset: aDuration) asLocal asDate!

translateToUTC
	"Private - This probably isn't correct, but then Dolphin's legacy Dates are not TZ aware. This is implemented purely to make the STON tests pass."

	^self translateTo: 0 seconds! !
!Date categoriesFor: #translateTo:!private! !
!Date categoriesFor: #translateToUTC!private! !

"End of package definition"!

