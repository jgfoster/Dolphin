| package |
package := Package name: 'RBTestMethods'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{BasicLintRuleTest}
	#{ClassToRename}
	#{CompositeLintRuleTest}
	#{FooLintRuleTest}
	#{LintRuleTest}
	#{RefactoryTestDataApp}
	#{SubclassOfClassToRename}
	#{TransformationRuleTest}
).

package setVariableNames: #(
	#{Smalllint}
	#{SmalllintResultEditor}
).

package setBinaryVariableNames: #(
	#{Smalllint}
	#{SmalllintResultEditor}
).

package setPrerequisites: #(
	'..\..\..\..\Object Arts\Dolphin\Base\Dolphin'
	'..\Change Objects\RBChangeObjects'
	'..\Environments\RBEnvironments'
	'..\Parser\RBParser'
	'..\Refactorings\RBRefactorings'
	'..\SmallLint\RBSmallLint'
).

package!

"Class Definitions"!

Object subclass: #LintRuleTest
	instanceVariableNames: 'name foo1'
	classVariableNames: 'Foo1'
	poolDictionaries: 'CRTConstants'
	classInstanceVariableNames: ''
	classConstants: {}!
Object subclass: #RefactoryTestDataApp
	instanceVariableNames: 'temporaryVariable'
	classVariableNames: ''
	poolDictionaries: 'CRTConstants'
	classInstanceVariableNames: ''
	classConstants: {}!
LintRuleTest subclass: #BasicLintRuleTest
	instanceVariableNames: 'classBlock methodBlock result'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LintRuleTest subclass: #CompositeLintRuleTest
	instanceVariableNames: 'rules'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LintRuleTest subclass: #FooLintRuleTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
FooLintRuleTest subclass: #TransformationRuleTest
	instanceVariableNames: 'rewriteRule builder class'
	classVariableNames: 'RecursiveSelfRule'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Model subclass: #ClassToRename
	instanceVariableNames: 'rewriteRule builder class'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'notUsed'
	classConstants: {}!
ClassToRename subclass: #SubclassOfClassToRename
	instanceVariableNames: 'rewriteRule1'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!

"End of package definition"!

