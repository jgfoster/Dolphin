| package |
package := Package name: 'SSW Widget Development'.
package paxVersion: 2;
	basicComment: '© Solutions Software/John Aspinall 2018
Provided under the same licence terms as Dolphin Smalltalk 7'.

package basicPackageVersion: '7.1.0'.


package setMethodNames: #(
	#(#{EditableListView class} #publishedAspectsOfInstances)
	#(#{EditableListViewColumn class} #publishedAspectsOfInstances)
	#(#{EmbeddedCheckBox class} #publishedAspectsOfInstances)
	#(#{EmbeddedCheckButton class} #publishedAspectsOfInstances)
	#(#{EmbeddedComboBox class} #publishedAspectsOfInstances)
	#(#{EmbeddedTextEdit class} #publishedAspectsOfInstances)
	#(#{FormattedTextEdit class} #publishedAspectsOfInstances)
	#(#{OwnerDrawnButton class} #publishedAspectsOfInstances)
	#(#{TextAndImageButton class} #publishedAspectsOfInstances)
).

package setPrerequisites: #(
	'..\..\Object Arts\Dolphin\IDE\Base\Development System'
	'SSW EditableListView'
	'SSW Widget Enhancements'
).

package!

"Loose Methods"!

!EditableListView class methodsFor!

publishedAspectsOfInstances
	"Answer a <LookupTable> of the <Aspect>s published by instances of the receiver."

	^(super publishedAspectsOfInstances)
		removeKey: #canEditLabels;
		removeKey: #hasCheckBoxes;
		add: (Aspect integer: #rowHeight);
		add: (Aspect name: #smallImageExtent);
		yourself! !
!EditableListView class categoriesFor: #publishedAspectsOfInstances!constants!development!public! !

!EditableListViewColumn class methodsFor!

publishedAspectsOfInstances
    	"Answer a <LookupTable> of the <Aspect>s published by instances of the receiver."
    
    	^(super publishedAspectsOfInstances)
		add: (Aspect name: #name);
    		add: (Aspect boolean: #isEditable);
    		add: (Aspect name: #editor chooseFrom: 
				#(	'EmbeddedTextEdit new' 
					'EmbeddedFormattedTextEdit new'
					'EmbeddedFormattedTextEdit newForDate'
					'EmbeddedMultilineTextEdit new'
					'EmbeddedCheckBox new'
					'EmbeddedRadioButton new'
					'EmbeddedComboBox new'
					'EmbeddedPushButton new'));
    		add: (Aspect block: #setContentsBlock);
    		add: (Aspect block: #preDrawBlock);
		add: (Aspect block: #getSortContentsBlock);
		add: (Aspect block: #isEditableBlock);
		add: (Aspect color: #forecolor);
		add: (Aspect color: #backcolor);
		add: (Aspect string: #infoTip);
		add: (Aspect block: #isValidContentsBlock);
    		yourself! !
!EditableListViewColumn class categoriesFor: #publishedAspectsOfInstances!development!public! !

!EmbeddedCheckBox class methodsFor!

publishedAspectsOfInstances
	"Answer a <LookupTable> of the <Aspect>s published by instances of the receiver."

	^(super publishedAspectsOfInstances)
		add: (Aspect boolean: #is3State);
		yourself! !
!EmbeddedCheckBox class categoriesFor: #publishedAspectsOfInstances!development!public! !

!EmbeddedCheckButton class methodsFor!

publishedAspectsOfInstances
	"Answer a <LookupTable> of the <Aspect>s published by instances of the receiver."

	^(super publishedAspectsOfInstances)
		add: (Aspect boolean: #isAlwaysDrawnEnabled);
		yourself! !
!EmbeddedCheckButton class categoriesFor: #publishedAspectsOfInstances!development!public! !

!EmbeddedComboBox class methodsFor!

publishedAspectsOfInstances
    	"Answer a <LookupTable> of the <Aspect>s published by instances of the receiver."
    
    	^(super publishedAspectsOfInstances)
    		add: (Aspect boolean: #allowNilSelection);
    		yourself! !
!EmbeddedComboBox class categoriesFor: #publishedAspectsOfInstances!constants!development!public! !

!EmbeddedTextEdit class methodsFor!

publishedAspectsOfInstances
    	"Answer a Set of the aspects published by  instances of the receiver"
    
    	^super publishedAspectsOfInstances 
		add: (Aspect name: #offset);
    		yourself! !
!EmbeddedTextEdit class categoriesFor: #publishedAspectsOfInstances!constants!development!public! !

!FormattedTextEdit class methodsFor!

publishedAspectsOfInstances
    	"Answer a Set of the aspects published by  instances of the receiver"
    
    	^super publishedAspectsOfInstances 
    		add: (Aspect string: #format);
    		add: (Aspect string: #separatorChars);
    		add: (Aspect set: #placeholderChar);
    		yourself! !
!FormattedTextEdit class categoriesFor: #publishedAspectsOfInstances!constants!development!public! !

!OwnerDrawnButton class methodsFor!

publishedAspectsOfInstances
	"Answer a <LookupTable> of the <Aspect>s published by instances of the receiver."

	^super publishedAspectsOfInstances
    		add: (Aspect choice: #alignment from: TextEdit.AlignmentMap keys asSortedCollection);
		add: (Aspect boolean: #isRightButton);
		add: (Aspect dictionary: #transitionDurations);
		yourself! !
!OwnerDrawnButton class categoriesFor: #publishedAspectsOfInstances!development!public! !

!TextAndImageButton class methodsFor!

publishedAspectsOfInstances
	"Answer a <LookupTable> of the <Aspect>s published by instances of the receiver."

	^super publishedAspectsOfInstances
		add: (Aspect name: #imageExtent);
		add: (Aspect menu: #dropDownMenu);
		yourself! !
!TextAndImageButton class categoriesFor: #publishedAspectsOfInstances!development!public! !

"End of package definition"!

