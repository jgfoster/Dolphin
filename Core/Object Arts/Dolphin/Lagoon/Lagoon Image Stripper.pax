| package |
package := Package name: 'Lagoon Image Stripper'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk Lagoon Image Stripper.
Copyright (c) Object Arts Ltd, 1998-2006.

This package contains the Lagoon Image Stripper which strips down images and creates executable applications.

See also the Application Deployment Kit package.'.

package basicPackageVersion: '6.2'.


package setClassNames: #(
	#{BasicImageStripper}
	#{ImageStripper}
	#{ImageStripperProgress}
	#{VersionResource}
	#{VS_VERSION_INFO_HEADER}
).

package setMethodNames: #(
	#(#{ExternalStructure class} #fullyCompileDefinition)
	#(#{ExternalStructure class} #removeTemplate)
	#(#{Object class} #onPreStripImage)
	#(#{UserLibrary} #messageBox:lpText:lpCaption:uType:)
).

package setPrerequisites: #(
	'..\Base\Dolphin'
).

package!

"Class Definitions"!

Object subclass: #BasicImageStripper
	instanceVariableNames: 'events'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Object subclass: #ImageStripperProgress
	instanceVariableNames: 'handle oldWndProc progressProcess progressRange progress status cursor'
	classVariableNames: 'MessageMap'
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {
		'CaptionId' -> 16r3F9.
		'ExplanationId' -> 16r3FA.
		'ProgressId' -> 16r3F7.
		'StatusId' -> 16r3F8
	}!
Object subclass: #VersionResource
	instanceVariableNames: 'fixedInfo stringTables translations'
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {}!
BasicImageStripper subclass: #ImageStripper
	instanceVariableNames: 'rootPackageName executableName runtimeSessionManagerClass flags preStripScript versionResource potentialAspectSetters stubFilePath logStream elementStack developmentClasses preservedMessages snapshotType rootClasses supersentMethods potentialAspectGetters notifier runFlags _unused20 _unused21 _unused22'
	classVariableNames: ''
	poolDictionaries: 'MessageBoxConstants Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {
		'AllResourcesStripped' -> 16r1.
		'ClearGuidsMask' -> 16r1.
		'CompileStructsMask' -> 16r100.
		'EmptyMethodDictsMask' -> 16r800.
		'FoldBytecodesMask' -> 16r1000.
		'FoldMethodDictsMask' -> 16r200.
		'FoldStringsMask' -> 16r2.
		'IgnoreViewReferencesMask' -> 16r80000.
		'KeepImageMask' -> 16r2000000.
		'LogLiveClassesMask' -> 16r8000000.
		'LogPrerequisitesMask' -> 16r40000.
		'LogReferencesMask' -> 16r2000.
		'NoXPManifestMask' -> 16r200000.
		'PreserveAspectsMask' -> 16r4.
		'PurgeStubbornClassesMask' -> 16r4000000.
		'RemoveAbstractUnreachable' -> 16r2.
		'RetainDevSysMask' -> 16r10000000.
		'RetainInstVarNamesMask' -> 16r8.
		'RetainSubclassRespMask' -> 16r800000.
		'StripClassBuilderMask' -> 16r4000.
		'StripClassesMask' -> 16r10.
		'StripClassInfoMask' -> 16r20.
		'StripDeprecatedMask' -> 16r10000.
		'StripMethodsMask' -> 16r40.
		'StripPackagesMask' -> 16r20000.
		'StripResourcesMask' -> 16r80.
		'StripShouldNotImplMask' -> 16r8000.
		'ToGoMask' -> 16r100000.
		'UnattendedMask' -> 16r1000000.
		'WriteLogMask' -> 16r400
	}!
Win32Structure subclass: #VS_VERSION_INFO_HEADER
	instanceVariableNames: 'key valueOffset'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_wLength' -> 16r0.
		'_OffsetOf_wType' -> 16r4.
		'_OffsetOf_wValueLength' -> 16r2
	}!

"Loose Methods"!

!ExternalStructure class methodsFor!

fullyCompileDefinition
	"Builds a new template and generates compiled methods for accessing 
	ALL the fields described by it. This is useful when image stripping to ensure
	that all methods are known at the time and don't rely on #perform:"

	self newTemplate; defineTemplate.
	self template do: [:each | each beCompiled].
	self recompileDefinition!

removeTemplate
	template := nil! !
!ExternalStructure class categoriesFor: #fullyCompileDefinition!compiling!public! !
!ExternalStructure class categoriesFor: #removeTemplate!private!template definition! !

!Object class methodsFor!

onPreStripImage
	"Private - Tidy up the receiver's lazily initialized class vars in preparation for image stripping."

	"Allows PropertyManager to be stripped if #propertyManager is never sent. If it is the method will still ref the var binding."
	classPool removeKey: '_PropertyRegister'! !
!Object class categoriesFor: #onPreStripImage!class hierarchy-removing!private! !

!UserLibrary methodsFor!

messageBox: hWnd lpText: lpText lpCaption: lpCaption uType: uType
	<stdcall: sdword MessageBoxW handle lpwstr lpwstr dword>
	^self invalidCall: _failureCode! !
!UserLibrary categoriesFor: #messageBox:lpText:lpCaption:uType:!public!win32 functions-dialog box! !

"End of package definition"!

