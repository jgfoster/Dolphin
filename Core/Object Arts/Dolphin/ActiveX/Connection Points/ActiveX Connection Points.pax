| package |
package := Package name: 'ActiveX Connection Points'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk Active-X Connection Points Package. 
Copyright (c) Object Arts Ltd, 2000.

Connection Points are the generic mechanism by which Active-X components implement the Observer pattern. A connection point is a server defined COM interface through which the server (the oberservee) publishes "events". One or many clients that wish to consume the events (the observers) can implement the COM interface, and then register their interface implementations with the server. Subsequently when the server publishes the event they will receiver a "callback" through the interface. The COM jargon for a connection point interface is a "source" interface. Observers are frequently referred to as "event sinks", or just "sinks".

Source interfaces are almost always pure "dispinterfaces" (that is late-bound IDispatch interfaces) due to historical limitations in Visual Basic which can only (or could only) sink events through dispinterfaces. Dolphin can implement source interfaces as either early-bound COM interfaces (i.e. with a virtual function table, or vtbl) or as dispinterfaces. The AXEventSink class in this package is a generic event sink which can receive events through arbitrary dispinterfaces, and forward them on using Dolphin''s own native SASE event system (#when:send:to:, #trigger:, etc). The parameters to particular events may be either inbound or outbound. An example of the latter might be an event an Active-X control sends seeking permission to do something, such as change selection. In effect the event source sends such events with a value holder (or buffer) which the observers can update to pass information back to the event source.

An example of the use of AXEventSink can be found in the AXControlSite class of Dolphin''s Active-X Control Hosting package, where it is used to sink events from hosted OCXs.'.

package basicPackageVersion: '6.1'.


package setClassNames: #(
	#{AXEventSink}
	#{CONNECTDATA}
	#{IConnectionPoint}
	#{IConnectionPointContainer}
	#{IEnumConnectionPoints}
).

package setPrerequisites: #(
	'..\Automation\ActiveX Automation'
	'..\..\Base\Dolphin'
	'..\COM\OLE COM'
).

package!

"Class Definitions"!

AXDispatchImpAbstract subclass: #AXEventSink
	instanceVariableNames: 'idMap target connector cookie tiSource flags'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'GenericEventMask' -> 16r2.
		'NoIndividualEventsMask' -> 16r4.
		'TraceMask' -> 16r1
	}!
IUnknown subclass: #IConnectionPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
IUnknown subclass: #IConnectionPointContainer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
IEnumUnknown subclass: #IEnumConnectionPoints
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
OLEStructure subclass: #CONNECTDATA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_dwCookie' -> 16r4.
		'_OffsetOf_punk' -> 16r0
	}!

"End of package definition"!

