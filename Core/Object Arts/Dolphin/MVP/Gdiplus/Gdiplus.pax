| package |
package := Package name: 'Gdiplus'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk GDI+ Binding
Copyright (c) Dan Antion, Object Arts Ltd, Louis Sumberg, Chris Uppal, and Steve Waring, 2003-2004.

Licensed under OpenBSD license (See http://www.openbsd.org/policy.html).

This package includes a complete definition of the GDI+ Flat API (see GdiplusLibrary), including all the supporting structures that are not already defined elsewhere in Dolphin.

Much of GdiplusLibrary is in turn wrapped in the GdiplusBase hierarchy, which contains GDI+ objects such as images and bitmaps, graphics surfaces, fonts, pens and brushes.

Thanks go to Blair McGlashan, Steve Waring, Dan Antion, Chris Uppal, and Louis Sumberg for working together to make the set of Gdiplus packages available.

---------------------------------------------------------
Examples

Browse the "examples" category for this package or search definitions of ''exampleGdip*'' to find numerous examples using various objects and settings.  Many of the examples are based on examples from MSDN, in which case the comment indicates where in MSDN additional information can be found.  Many of the examples depend on files created through the GdiplusTests package, so it''''s recommended that this be installed also.

---------------------------------------------------------
v0.06 Changes by Louis Sumberg and Chris Uppal
See - #CUadded  #LASadded #LASfix.
---------------------------------------------------------
v sw1 Changes by Steve Waring
See - #swAdded #swFix
 - GdiplusPen, GdiplusLinearGradientBrush, GdiplusBrush, GdiplusBase
 - GdiplusLinearGradientBrush(class)>>example*
---------------------------------------------------------
v sw2 Changes by Steve Waring
- Cleaned up ARGB
- Changed from using a parameterized constructor (ie
constructorSelector/constructorArgument) to GdiplusInitializer constructor
objects.
- Moved GdiplusImage and GdiplusBitmap to the GdiplusBase hierarchy
- Added GdiplusSolidBrush and GdiImageAttributes
- New examples on the class-side of
GdiplusGraphics/GdiplusImage/GdiplusBitmap and GdiPlusImageAttributes.
- Added GdiplusBitmap constructors; #fromIStream: #fromIcon #width:height
#fromByteArray:
- Added GdiplusImage constructors; #fromImage:
------------------------------------------------------------------------
v sw2.022 Changes by Louis Sumberg
- Added GdiplusCachedBitmap, GdiplusFont, GdiplusFontCollection, GdiplusFontFamily, GdiplusGraphicsPath, GdiplusHatchBrush, GdiplusInstalledFontCollection, GdiplusMatrix, GdiplusPrivateFontCollection, GdiplusStringFormat, GdiplusTextureBrush, and associated Initializers
- Added examples in several classes - look for exampleMSDN*
- Methods added to and changed in existing classes marked with #LASadded or #LASfix.

------------------------------------------------------------------------
v dev3 
Changes by Dan Antion 
- Add-on Rotation package: DaGraphicExtensions
Changes by Steve Waring
-Added GdiplusImageFromIStreamInitializer

------------------------------------------------------------------------
v dev3.015 Changes by Louis Sumberg
- Added GdiplusRegion and associated initializers.
- Added helper methods, e.g., Gdiplus>>default and GdiplusImage>>prompt, to make it easier to get a new instance.
- Added new examples and changed many (though not all) to return a value, so that unit tests could be run on the examples and the examples could still be evaluated by a line in the examples'' comment.
- GdiplusGraphics:  New methods for "world transformations", e.g., rotating and scaling.  New methods also for clipping, drawing and filling.
- GdiplusGraphicsPath:  New methods, mostly for adding shapes to a Path.
- GdiplusImage:  New methods for property items, thumbnails, and encoders/decoders.  Accessors also added to GpPropertyItem to return string names of integer constants.
- Some cleanup (removed #LASxxx tags, renamed some temp vars, put helper methods in old code).  Miscellaneous methods added and changed, not mentioned above.

------------------------------------------------------------------------
v dev4 
 - Fixes and tests by Blair McGlashan.
 - "Gdiplus ImageView" package by Steve Waring.

 - GdiplusBase example methods, if placed in the ''sunit'' method category, can be run as unit tests, by running the GdiplusExamplesTest class>>buildTestCase script.

------------------------------------------------------------------------
v dev4.5 Changes by Louis Sumberg
- Added comments to all classes and most methods in GdiplusBase hierarchy.
- Added new classes - GdiplusAdjustableArrowCap, GdiplusCustomLineCap, and GdiplusPathGradientBrush - and associated initializer classes.
- Added new initializer classes for existing classes - GdiplusGraphicsPathFromPointsInitializer, GdiplusRegionInitializer, and GdiplusStringFormatGenericInitializer.
- Added GdiplusGUIDs, a PoolConstantsDictionary, to GdiplusBase.  Also added a slew of methods to class GdiplusBase that enumerate subsets of constants and GUIDs in GdiplusConstants and GdiplusGUIDs.
- Renamed a lot of methods and deprecated the old ones.  In general, dropped "get" and "set" from methods names.  Deprecated #newInitialized and #default methods in favor of #new, though not all classes implement #new.
- Added a lot of example methods and replaced the ''MSDN'' naming scheme with ''Gdip'', since many examples are not from MSDN and so a search for exampleGdip* will return all examples.
- Miscellaneous methods added and changed, not mentioned above.  In general, most GDI+ features are now implemented in GdiplusBase and GdiplusInitializer hierarchies.

------------------------------------------------------------------------
v dev5
-  Deprecated methods removed.
 - Fixes and tests by Steve Waring, Louis Sumberg, and Blair McGlashan.


---------------------------------------------------------
Maintenance

The following auto-generated methods have been changed:
 - GdiplusLibrary>>GdipGetFamilyName:name:language:
 - GpEncoderParameters>>Parameter/Parameter:

A lot of constants were added.

GdiplusGUIDs
	at:''EncoderCompression''
		put: (GUIDfromString:''{e09d739d-ccd4-44ee-8eba-3fbf8be4fc58}'');
	at:''EncoderColorDepth''
		put: (GUIDfromString:''{66087055-ad66-4c7c-9a18-38a2310b8337}'');
	at:''EncoderScanMethod''
		put: (GUIDfromString:''{3a4e2661-3109-4e56-8536-42c156e7dcfa}'');
	at:''EncoderVersion''
		put: (GUIDfromString:''{24d18c76-814a-41a4-bf53-1c219cccf797}'');
	at:''EncoderRenderMethod''
		put: (GUIDfromString:''{6d42c53a-229a-4825-8bb7-5c99e2b9a8b8}'');
	at:''EncoderQuality''
		put: (GUIDfromString:''{1D5BE4B5-FA4A-452D-9CDD-5DB35105E7EB}'');
	at:''EncoderTransformation''
		put: (GUIDfromString:''{8D0EB2D1-A58E-4EA8-AA14-108074B7B6F9}'');
	at:''EncoderLuminanceTable''
		put: (GUIDfromString:''{edb33bce-0266-4a77-b904-27216099e717}'');
	at:''EncoderChrominanceTable''
		put: (GUIDfromString:''{f2e455dc-09b3-4316-8260-676ada32481c}'');
	at:''EncoderSaveFlag''
		put: (GUIDfromString:''{292266fc-ac40-47bf-8cfc-a85b89a655de}'');
	at:''FrameDimensionTime''
		put: (GUIDfromString:''{6aedbd6d-3fb5-418a-83a6-7f45229dc872}'');
	at:''FrameDimensionResolution''
		put: (GUIDfromString:''{84236f7b-3bd3-428f-8dab-4ea1439ca315}'');
	at:''FrameDimensionPage''
		put: (GUIDfromString:''{7462dc86-6180-4c7e-8e3f-ee7333a7a483}'');'.

package basicPackageVersion: '6.2'.


package setClassNames: #(
	#{ENHMETAHEADER3}
	#{GdiplusAdjustableArrowCap}
	#{GdiplusAdjustableArrowCapInitializer}
	#{GdiplusBase}
	#{GdiplusBitmap}
	#{GdiplusBitmapFromBitmapInitializer}
	#{GdiplusBitmapFromBlankInitializer}
	#{GdiplusBitmapFromBytesInitializer}
	#{GdiplusBitmapFromFileInitializer}
	#{GdiplusBitmapFromIconInitializer}
	#{GdiplusBitmapFromIStreamInitializer}
	#{GdiplusBrush}
	#{GdiplusCachedBitmap}
	#{GdiplusCachedBitmapInitializer}
	#{GdiplusCustomLineCap}
	#{GdiplusCustomLineCapInitializer}
	#{GdiplusDoubleBufferedView}
	#{GdiplusError}
	#{GdiplusFont}
	#{GdiplusFontCollection}
	#{GdiplusFontFamily}
	#{GdiplusFontFamilyFromNameInitializer}
	#{GdiplusFontFamilyGenericSansSerifInitializer}
	#{GdiplusFontFamilyGenericSerifInitializer}
	#{GdiplusFontFamilyInitializer}
	#{GdiplusFontFromFontFamilyInitializer}
	#{GdiplusFromBytesInitializer}
	#{GdiplusFromFileInitializer}
	#{GdiplusGraphics}
	#{GdiplusGraphicsFromHDCInitializer}
	#{GdiplusGraphicsFromImageInitializer}
	#{GdiplusGraphicsPath}
	#{GdiplusGraphicsPathFromPointsInitializer}
	#{GdiplusGraphicsPathInitializer}
	#{GdiplusHatchBrush}
	#{GdiplusHatchBrushInitializer}
	#{GdiplusImage}
	#{GdiplusImageAttributes}
	#{GdiplusImageAttributesInitializer}
	#{GdiplusImageFromBytesInitializer}
	#{GdiplusImageFromFileInitializer}
	#{GdiplusImageFromIStreamInitializer}
	#{GdiplusInitializer}
	#{GdiplusInstalledFontCollection}
	#{GdiplusInstalledFontCollectionInitializer}
	#{GdiplusLibrary}
	#{GdiplusLinearGradientBrush}
	#{GdiplusLinearGradientBrushFromPointsInitializer}
	#{GdiplusLinearGradientBrushFromRectInitializer}
	#{GdiplusLinearGradientBrushInitializer}
	#{GdiplusMatrix}
	#{GdiplusMatrixInitializer}
	#{GdiplusPathGradientBrush}
	#{GdiplusPathGradientFromPathInitializer}
	#{GdiplusPathGradientFromPointsInitializer}
	#{GdiplusPen}
	#{GdiplusPenFromBrushInitializer}
	#{GdiplusPenFromColorInitializer}
	#{GdiplusPenInitializer}
	#{GdiplusPrivateFontCollection}
	#{GdiplusPrivateFontCollectionInitializer}
	#{GdiplusRegion}
	#{GdiplusRegionFromPathInitializer}
	#{GdiplusRegionFromRectangleInitializer}
	#{GdiplusRegionInitializer}
	#{GdiplusSolidBrush}
	#{GdiplusSolidBrushFromColorInitializer}
	#{GdiplusStartupInput}
	#{GdiplusStartupOutput}
	#{GdiplusStringFormat}
	#{GdiplusStringFormatFromFlagsInitializer}
	#{GdiplusStringFormatGenericDefaultInitializer}
	#{GdiplusStringFormatGenericTypographicInitializer}
	#{GdiplusStringFormatInitializer}
	#{GdiplusTextureBrush}
	#{GdiplusTextureBrushInitializer}
	#{GpBitmapData}
	#{GpCharacterRange}
	#{GpColorMap}
	#{GpColorMatrix}
	#{GpColorPalette}
	#{GpEncoderParameter}
	#{GpEncoderParameters}
	#{GpImageCodecInfo}
	#{GpMetafileHeader}
	#{GpPathData}
	#{GpPropertyItem}
	#{GpWmfPlaceableFileHeader}
	#{GpWMFRect16}
	#{METAHEADER}
	#{RECTF}
).

package setMethodNames: #(
	#(#{Bitmap} #asColorKeyedBitmap)
	#(#{Bitmap} #asColorKeyedBitmap:)
	#(#{Point} #scaledOver:)
	#(#{Point} #scaledTo:)
	#(#{Rectangle} #asGdiplusRectangle)
	#(#{View} #createThumbnailExtent:mask:)
).

package setVariableNames: #(
	#{GdiplusConstants}
	#{GdiplusGUIDs}
).

package setPrerequisites: #(
	'..\..\Base\Dolphin'
	'..\Base\Dolphin Basic Geometry'
	'..\Dialogs\Common\Dolphin Common Dialogs'
	'..\..\Base\Dolphin Conformant Array Fields'
	'..\Presenters\Image\Dolphin Image Presenter'
	'..\Models\List\Dolphin List Models'
	'..\..\Base\Dolphin Message Box'
	'..\Base\Dolphin MVP Base'
	'..\..\ActiveX\Structured Storage\OLE Structured Storage'
).

package!

"Class Definitions"!

Object subclass: #GdiplusInitializer
	instanceVariableNames: 'library'
	classVariableNames: ''
	poolDictionaries: 'GdiplusConstants'
	classInstanceVariableNames: ''
	classConstants: {}!
Error subclass: #GdiplusError
	instanceVariableNames: 'win32Error'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'ErrorDescriptions' -> #('Ok' 'Generic Error' 'Invalid parameter' 'Gdiplus error' 'Object busy' 'Insufficient buffer' 'Not implemented' 'Win32 error' 'Wrong state' 'Aborted' 'File not found' 'Value overflow' 'Access denied' 'Unknown image format' 'Font family not found' 'Font style not found' 'Not a TrueType font' 'Unsupported GDI+ Version' 'GDI+ not initialized' 'Property not found' 'Property not supported')
	}!
ExternalLibrary subclass: #GdiplusLibrary
	instanceVariableNames: 'token'
	classVariableNames: ''
	poolDictionaries: 'GdiplusConstants'
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalStructure subclass: #ENHMETAHEADER3
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_dSignature' -> 16r28.
		'_OffsetOf_iType' -> 16r0.
		'_OffsetOf_nBytes' -> 16r30.
		'_OffsetOf_nDescription' -> 16r3C.
		'_OffsetOf_nHandles' -> 16r38.
		'_OffsetOf_nPalEntries' -> 16r44.
		'_OffsetOf_nRecords' -> 16r34.
		'_OffsetOf_nSize' -> 16r4.
		'_OffsetOf_nVersion' -> 16r2C.
		'_OffsetOf_offDescription' -> 16r40.
		'_OffsetOf_rclBounds' -> 16r8.
		'_OffsetOf_rclFrame' -> 16r18.
		'_OffsetOf_sReserved' -> 16r3A.
		'_OffsetOf_szlDevice' -> 16r48.
		'_OffsetOf_szlMillimeters' -> 16r50
	}!
ExternalStructure subclass: #GdiplusStartupInput
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_DebugEventCallback' -> 16r4.
		'_OffsetOf_GdiplusVersion' -> 16r0.
		'_OffsetOf_SuppressBackgroundThread' -> 16r8.
		'_OffsetOf_SuppressExternalCodecs' -> 16rC
	}!
ExternalStructure subclass: #GdiplusStartupOutput
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_NotificationHook' -> 16r0.
		'_OffsetOf_NotificationUnhook' -> 16r4
	}!
ExternalStructure subclass: #GpBitmapData
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_Height' -> 16r4.
		'_OffsetOf_PixelFormat' -> 16rC.
		'_OffsetOf_Reserved' -> 16r14.
		'_OffsetOf_Scan0' -> 16r10.
		'_OffsetOf_Stride' -> 16r8.
		'_OffsetOf_Width' -> 16r0
	}!
ExternalStructure subclass: #GpCharacterRange
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_First' -> 16r0.
		'_OffsetOf_length' -> 16r4
	}!
ExternalStructure subclass: #GpColorMap
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_newColor' -> 16r4.
		'_OffsetOf_oldColor' -> 16r0
	}!
ExternalStructure subclass: #GpColorMatrix
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_m' -> 16r0
	}!
ExternalStructure subclass: #GpColorPalette
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_Count' -> 16r4.
		'_OffsetOf_Entries' -> 16r8.
		'_OffsetOf_Flags' -> 16r0
	}!
ExternalStructure subclass: #GpEncoderParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_Guid' -> 16r0.
		'_OffsetOf_NumberOfValues' -> 16r10.
		'_OffsetOf_Type' -> 16r14.
		'_OffsetOf_Value' -> 16r18
	}!
ExternalStructure subclass: #GpEncoderParameters
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_Count' -> 16r0.
		'_OffsetOf_Parameter' -> 16r4
	}!
ExternalStructure subclass: #GpImageCodecInfo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_Clsid' -> 16r0.
		'_OffsetOf_CodecName' -> 16r20.
		'_OffsetOf_DllName' -> 16r24.
		'_OffsetOf_FilenameExtension' -> 16r2C.
		'_OffsetOf_Flags' -> 16r34.
		'_OffsetOf_FormatDescription' -> 16r28.
		'_OffsetOf_FormatID' -> 16r10.
		'_OffsetOf_MimeType' -> 16r30.
		'_OffsetOf_SigCount' -> 16r3C.
		'_OffsetOf_SigMask' -> 16r48.
		'_OffsetOf_SigPattern' -> 16r44.
		'_OffsetOf_SigSize' -> 16r40.
		'_OffsetOf_Version' -> 16r38
	}!
ExternalStructure subclass: #GpMetafileHeader
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_DpiX' -> 16r10.
		'_OffsetOf_DpiY' -> 16r14.
		'_OffsetOf_EmfHeader' -> 16r28.
		'_OffsetOf_EmfPlusFlags' -> 16rC.
		'_OffsetOf_EmfPlusHeaderSize' -> 16r80.
		'_OffsetOf_height' -> 16r24.
		'_OffsetOf_LogicalDpiX' -> 16r84.
		'_OffsetOf_LogicalDpiY' -> 16r88.
		'_OffsetOf_size' -> 16r4.
		'_OffsetOf_type' -> 16r0.
		'_OffsetOf_Version' -> 16r8.
		'_OffsetOf_width' -> 16r20.
		'_OffsetOf_WmfHeader' -> 16r28.
		'_OffsetOf_x' -> 16r18.
		'_OffsetOf_y' -> 16r1C
	}!
ExternalStructure subclass: #GpPathData
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_Count' -> 16r0.
		'_OffsetOf_Points' -> 16r4.
		'_OffsetOf_Types' -> 16r8
	}!
ExternalStructure subclass: #GpPropertyItem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_id' -> 16r0.
		'_OffsetOf_length' -> 16r4.
		'_OffsetOf_Type' -> 16r8.
		'_OffsetOf_Value' -> 16rC
	}!
ExternalStructure subclass: #GpWmfPlaceableFileHeader
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_BoundingBox' -> 16r6.
		'_OffsetOf_Checksum' -> 16r14.
		'_OffsetOf_Hmf' -> 16r4.
		'_OffsetOf_Inch' -> 16rE.
		'_OffsetOf_Key' -> 16r0.
		'_OffsetOf_Reserved' -> 16r10
	}!
ExternalStructure subclass: #GpWMFRect16
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_bottom' -> 16r6.
		'_OffsetOf_left' -> 16r0.
		'_OffsetOf_right' -> 16r4.
		'_OffsetOf_top' -> 16r2
	}!
ExternalStructure subclass: #METAHEADER
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_mtHeaderSize' -> 16r2.
		'_OffsetOf_mtMaxRecord' -> 16r10.
		'_OffsetOf_mtNoObjects' -> 16rC.
		'_OffsetOf_mtNoParameters' -> 16r14.
		'_OffsetOf_mtSize' -> 16r8.
		'_OffsetOf_mtType' -> 16r0.
		'_OffsetOf_mtVersion' -> 16r4
	}!
ExternalRectangle subclass: #RECTF
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_height' -> 16rC.
		'_OffsetOf_width' -> 16r8.
		'_OffsetOf_x' -> 16r0.
		'_OffsetOf_y' -> 16r4
	}!
GdiplusInitializer subclass: #GdiplusAdjustableArrowCapInitializer
	instanceVariableNames: 'height width isFilled'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusBitmapFromBitmapInitializer
	instanceVariableNames: 'bitmap'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusBitmapFromBlankInitializer
	instanceVariableNames: 'width height format'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusBitmapFromIconInitializer
	instanceVariableNames: 'icon'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusBitmapFromIStreamInitializer
	instanceVariableNames: 'iStream'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusCachedBitmapInitializer
	instanceVariableNames: 'bitmap graphics'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusCustomLineCapInitializer
	instanceVariableNames: 'fillPath strokePath baseCap baseInset'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusFontFamilyInitializer
	instanceVariableNames: ''
	classVariableNames: 'GenericSansSerif GenericSerif'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusFontFromFontFamilyInitializer
	instanceVariableNames: 'fontFamily emSize style unit'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusFromBytesInitializer
	instanceVariableNames: 'bytes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusFromFileInitializer
	instanceVariableNames: 'filename fileLocator'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusGraphicsFromHDCInitializer
	instanceVariableNames: 'canvas'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusGraphicsFromImageInitializer
	instanceVariableNames: 'image'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusGraphicsPathFromPointsInitializer
	instanceVariableNames: 'pathPoints pathTypes fillMode'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusGraphicsPathInitializer
	instanceVariableNames: 'fillMode'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusHatchBrushInitializer
	instanceVariableNames: 'style forecolor backcolor'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusImageAttributesInitializer
	instanceVariableNames: ''
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusImageFromIStreamInitializer
	instanceVariableNames: 'iStream'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusInstalledFontCollectionInitializer
	instanceVariableNames: ''
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusLinearGradientBrushInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusMatrixInitializer
	instanceVariableNames: 'm11 m12 m21 m22 m31 m32'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusPathGradientFromPathInitializer
	instanceVariableNames: 'path'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusPathGradientFromPointsInitializer
	instanceVariableNames: 'pathPoints wrapMode'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusPenInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusPrivateFontCollectionInitializer
	instanceVariableNames: ''
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusRegionFromPathInitializer
	instanceVariableNames: 'path'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusRegionFromRectangleInitializer
	instanceVariableNames: 'rectangle'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusRegionInitializer
	instanceVariableNames: ''
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusSolidBrushFromColorInitializer
	instanceVariableNames: 'color'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusStringFormatInitializer
	instanceVariableNames: 'formatFlags language'
	classVariableNames: 'GenericDefault GenericTypographic'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusInitializer subclass: #GdiplusTextureBrushInitializer
	instanceVariableNames: 'image wrapMode rectangle'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFontFamilyInitializer subclass: #GdiplusFontFamilyFromNameInitializer
	instanceVariableNames: 'name fontCollection'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFontFamilyInitializer subclass: #GdiplusFontFamilyGenericSansSerifInitializer
	instanceVariableNames: ''
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFontFamilyInitializer subclass: #GdiplusFontFamilyGenericSerifInitializer
	instanceVariableNames: ''
	classVariableNames: 'Default'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFromBytesInitializer subclass: #GdiplusBitmapFromBytesInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFromBytesInitializer subclass: #GdiplusImageFromBytesInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFromFileInitializer subclass: #GdiplusBitmapFromFileInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFromFileInitializer subclass: #GdiplusImageFromFileInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusLinearGradientBrushInitializer subclass: #GdiplusLinearGradientBrushFromPointsInitializer
	instanceVariableNames: 'point1 point2 color1 color2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusLinearGradientBrushInitializer subclass: #GdiplusLinearGradientBrushFromRectInitializer
	instanceVariableNames: 'rect color1 color2 mode'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusPenInitializer subclass: #GdiplusPenFromBrushInitializer
	instanceVariableNames: 'brush width'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusPenInitializer subclass: #GdiplusPenFromColorInitializer
	instanceVariableNames: 'color width'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusStringFormatInitializer subclass: #GdiplusStringFormatFromFlagsInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusStringFormatInitializer subclass: #GdiplusStringFormatGenericDefaultInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusStringFormatInitializer subclass: #GdiplusStringFormatGenericTypographicInitializer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GraphicsTool subclass: #GdiplusBase
	instanceVariableNames: 'initializer'
	classVariableNames: ''
	poolDictionaries: 'GdiplusConstants GdiplusGUIDs'
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusBrush
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusCachedBitmap
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusCustomLineCap
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusFont
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusFontCollection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusFontFamily
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusGraphics
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusGraphicsPath
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusImage
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusImageAttributes
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusMatrix
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusPen
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusRegion
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBase subclass: #GdiplusStringFormat
	instanceVariableNames: ''
	classVariableNames: 'GenericDefault GenericTypographic'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBrush subclass: #GdiplusHatchBrush
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBrush subclass: #GdiplusLinearGradientBrush
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBrush subclass: #GdiplusPathGradientBrush
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBrush subclass: #GdiplusSolidBrush
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'GdiplusConstants'
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusBrush subclass: #GdiplusTextureBrush
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusCustomLineCap subclass: #GdiplusAdjustableArrowCap
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFontCollection subclass: #GdiplusInstalledFontCollection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusFontCollection subclass: #GdiplusPrivateFontCollection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
GdiplusImage subclass: #GdiplusBitmap
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
View subclass: #GdiplusDoubleBufferedView
	instanceVariableNames: 'backSurface requiresRender'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!Bitmap methodsFor!

asColorKeyedBitmap
	^self asColorKeyedBitmap: (self canvas pixelAt: 0 @ 0).
!

asColorKeyedBitmap: aKeyColor
	| image table imageAttributes bitmap keyedBitmap |
	table := StructureArray length: 1 elementClass: GpColorMap.
	image := GdiplusBitmap fromBitmap: self.
	(table at: 1)
		oldColor: aKeyColor argbCode;
		newColor: Color argbNoneCode.
	imageAttributes := GdiplusImageAttributes new remapTable: table.
	bitmap := GdiplusBitmap extent: self extent.
	bitmap graphics
		drawImage: image
		at: Point zero
		extent: image extent
		from: Point zero
		extent: image extent
		unit: 2
		attributes: imageAttributes.
	keyedBitmap := Bitmap displayCompatibleWithExtent: self extent.
	bitmap drawOn: keyedBitmap canvas.
	keyedBitmap freeDC.
	^keyedBitmap! !
!Bitmap categoriesFor: #asColorKeyedBitmap!public! !
!Bitmap categoriesFor: #asColorKeyedBitmap:!public! !

!Point methodsFor!

scaledOver: aPoint 
	"Answer a copy of the receiver scaled over aPoint.  One of the answered 
	dimensions will be the same as the corresponding dimension in aPoint, 
	the other dimension will be equal or larger than its counterpart."

	| scale |
	scale := aPoint x / self x.
	scale * self y < aPoint y ifTrue: [scale := aPoint y / self y].
	^scale * self!

scaledTo: aPoint 
	"Answer a copy of the receiver scaled to aPoint.  One of the answered 
	dimensions will be the same as the corresponding dimension in aPoint, 
	the other dimension will be equal or smaller than its counterpart."

	| scale |
	scale := aPoint x / self x.
	scale * self y > aPoint y ifTrue: [scale := aPoint y / self y].
	^scale * self! !
!Point categoriesFor: #scaledOver:!public! !
!Point categoriesFor: #scaledTo:!operations!public! !

!Rectangle methodsFor!

asGdiplusRectangle
	"In Gdiplus the rectangle coordinates include the lower right border"

	^self position extent: self extent - 1 asPoint! !
!Rectangle categoriesFor: #asGdiplusRectangle!converting!public! !

!View methodsFor!

createThumbnailExtent: extent mask: aColor 
	| image crop rect scale thumbnail canvas r scaledExtent |
	image := GdiplusBitmap fromView: self.
	rect := Rectangle origin: Point zero extent: self extent.
	crop := GdiplusBitmap extent: rect extent.
	(crop graphics)
		clear: aColor;
		drawImage: image
			at: 1 @ 1
			extent: rect extent
			from: rect topLeft
			extent: rect extent;
		drawRectangle: (rect translatedBy: 1 @ 1) pen: (GdiplusPen color: Color silver).
	image := crop.

	"Work out scale to use"
	r := extent / image extent.
	scale := r x min: r y.

	"Now create thumbnail"
	scaledExtent := (image extent * scale) rounded.
	"image := GdiplusBitmap fromImage: image extent: scaledExtent."
	image := image thumbnailWithExtent2: scaledExtent.
	thumbnail := DIBSection width: extent x height: extent y.
	canvas := thumbnail canvas.
	"canvas fillRectangle: (0 @ 0 extent: canvas extent) brush: (Brush color: aColor)."
	image drawOn: canvas at: ((extent - scaledExtent) / 2) rounded.
	thumbnail freeDC.
	^thumbnail! !
!View categoriesFor: #createThumbnailExtent:mask:!private! !

"End of package definition"!

