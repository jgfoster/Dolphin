| package |
package := Package name: 'Dolphin Rich Text Presenter'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Smalltalk RichTextEdit View.
Copyright (c) Object Arts Ltd. 1997-2018. Portions Copyright (c) CGI Group (Europe) Ltd. 1997.

A RichTextPresenter is a <TextPresenter> specialised for the display of RTF. The default view is a wrapper around the satndard Windows RichEdit control (RichTextEdit).'.

package basicPackageVersion: '6.1'.


package setClassNames: #(
	#{CHARFORMAT2W}
	#{EDITSTREAM}
	#{ENLINK}
	#{FORMATRANGE}
	#{GETTEXTEX}
	#{PARAFORMAT}
	#{RichText}
	#{RichTextEdit}
	#{RichTextPresenter}
).

package setMethodNames: #(
	#(#{Clipboard} #getRichText)
	#(#{Clipboard} #getRichTextIfNone:)
	#(#{String} #asRichText)
	#(#{TextEdit} #richText)
	#(#{TextEdit} #richTextClass)
	#(#{TextEdit} #selectionRichText:)
	#(#{TextEdit} #selectionRtf:)
	#(#{View} #richText)
).

package setVariableNames: #(
	#{RichEditConstants}
).

package setPrerequisites: #(
	'..\..\..\Base\Dolphin'
	'..\..\Base\Dolphin Basic Geometry'
	'..\..\Dialogs\Common\Dolphin Common Dialogs'
	'..\..\Base\Dolphin MVP Base'
	'Dolphin Text Presenter'
	'..\..\Type Converters\Dolphin Type Converters'
).

package!

"Class Definitions"!

Object subclass: #RichText
	instanceVariableNames: 'rtf'
	classVariableNames: 'Converter ConverterMutex'
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
Win32Structure subclass: #CHARFORMAT2W
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'CommonDialogConstants RichEditConstants'
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_bAnimation' -> 16r71.
		'_OffsetOf_bCharSet' -> 16r18.
		'_OffsetOf_bPitchAndFamily' -> 16r19.
		'_OffsetOf_bRevAuthor' -> 16r72.
		'_OffsetOf_bUnderlineColor' -> 16r73.
		'_OffsetOf_bUnderlyineType' -> 16r70.
		'_OffsetOf_crBackColor' -> 16r60.
		'_OffsetOf_crTextColor' -> 16r14.
		'_OffsetOf_dwCookie' -> 16r68.
		'_OffsetOf_dwEffects' -> 16r8.
		'_OffsetOf_dwMask' -> 16r4.
		'_OffsetOf_dwSize' -> 16r0.
		'_OffsetOf_lcid' -> 16r64.
		'_OffsetOf_sSpacing' -> 16r5C.
		'_OffsetOf_sStyle' -> 16r6C.
		'_OffsetOf_szFaceName' -> 16r1A.
		'_OffsetOf_wKerning' -> 16r6E.
		'_OffsetOf_wWeight' -> 16r5A.
		'_OffsetOf_yHeight' -> 16rC.
		'_OffsetOf_yOffset' -> 16r10
	}!
Win32Structure subclass: #EDITSTREAM
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_dwCookie' -> 16r0.
		'_OffsetOf_dwError' -> 16r4.
		'_OffsetOf_pfnCallback' -> 16r8
	}!
Win32Structure subclass: #FORMATRANGE
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_cpMax' -> 16r2C.
		'_OffsetOf_cpMin' -> 16r28.
		'_OffsetOf_hdc' -> 16r0.
		'_OffsetOf_hdcTarget' -> 16r4.
		'_OffsetOf_rc' -> 16r8.
		'_OffsetOf_rcPage' -> 16r18
	}!
Win32Structure subclass: #GETTEXTEX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_cb' -> 16r0.
		'_OffsetOf_codepage' -> 16r8.
		'_OffsetOf_flags' -> 16r4.
		'_OffsetOf_lpDefaultChar' -> 16rC.
		'_OffsetOf_lpUsedDefChar' -> 16r10
	}!
Win32Structure subclass: #PARAFORMAT
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'RichEditConstants'
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_cTabCount' -> 16r1A.
		'_OffsetOf_dwMask' -> 16r4.
		'_OffsetOf_dwSize' -> 16r0.
		'_OffsetOf_dxOffset' -> 16r14.
		'_OffsetOf_dxRightIndent' -> 16r10.
		'_OffsetOf_dxStartIndent' -> 16rC.
		'_OffsetOf_rgxTabs' -> 16r1C.
		'_OffsetOf_wAlignment' -> 16r18.
		'_OffsetOf_wEffects' -> 16rA.
		'_OffsetOf_wNumbering' -> 16r8
	}!
NMHDR subclass: #ENLINK
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {
		'_OffsetOf_chrg' -> 16r18.
		'_OffsetOf_lParam' -> 16r14.
		'_OffsetOf_msg' -> 16rC.
		'_OffsetOf_wParam' -> 16r10
	}!
TextPresenter subclass: #RichTextPresenter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'CommonDialogConstants RichEditConstants'
	classInstanceVariableNames: ''
	classConstants: {}!
MultilineTextEdit subclass: #RichTextEdit
	instanceVariableNames: 'streamIn winStruct'
	classVariableNames: 'Library ParagraphAlignmentMap StreamingDescriptor'
	poolDictionaries: 'CommonDialogConstants RichEditConstants'
	classInstanceVariableNames: ''
	classConstants: {
		'AutoUrlDetectionMask' -> 16r1000000.
		'StreamInIndex' -> 16r11
	}!

"Loose Methods"!

!Clipboard methodsFor!

getRichText
        "Answer a <RichText> containing the the Rich Text contents 
	of the clipboard. If no rich text is currently available, raise 
	an exception."

	^self getRichTextIfNone: [self errorFormatNotAvailable: #RichText]!

getRichTextIfNone: exceptionHandler
	"Answer a <readableString> containing the the Rich Text contents 
	of the clipboard. If no rich text is currently available, the answers the
	result of evaluating the <niladicValuable> exceptionHandler."

	^self getRegisteredFormat: #RichText ifNone: exceptionHandler! !
!Clipboard categoriesFor: #getRichText!accessing!public! !
!Clipboard categoriesFor: #getRichTextIfNone:!accessing!public! !

!String methodsFor!

asRichText
	"Answer the receiver converted to a RichText instance"

	^RichText fromString: self! !
!String categoriesFor: #asRichText!converting!public! !

!TextEdit methodsFor!

richText
	"Answer a RichText containing the rich text contents of the receiver.
	May be overridden by subclasses which actually contain rich text."

	^self richTextClass fromString: self plainText!

richTextClass
	"Private - Answer the class of <readableString> used to wrap rich text."

	^RichText
!

selectionRichText: aRichText
	"Private - Replace the selected text in the receiver with the RTF 
	string, aRichText.
	This is the backend of a double-dispatch protocol between TextEdits and 
	RichText/Strings."

	self selectionPlainText: aRichText asString
	!

selectionRtf: aString
	"Private - Replace the selected text in the receiver with the RTF 
	string, aString.
	This is the backend of a double-dispatch protocol between TextEdits and 
	RichText/Strings."

	! !
!TextEdit categoriesFor: #richText!accessing!public! !
!TextEdit categoriesFor: #richTextClass!accessing!private! !
!TextEdit categoriesFor: #selectionRichText:!private!selection! !
!TextEdit categoriesFor: #selectionRtf:!private!selection! !

!View methodsFor!

richText
	"Answer a RichText containing the rich text contents of the receiver.
	May be overridden by subclasses which actually contain rich text."

	^self plainText asRichText! !
!View categoriesFor: #richText!accessing!public! !

"End of package definition"!

