| package |
package := Package name: 'Dolphin MVP Tests'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{AbstractContainerViewTest}
	#{AbstractPointTest}
	#{AbstractRectangleTest}
	#{AbstractTextEditTest}
	#{AcceleratorTableTest}
	#{ARGBTest}
	#{BorderLayoutTest}
	#{BrushTest}
	#{CanvasTest}
	#{ChoicePresenterTest}
	#{ClipboardTest}
	#{ColorDialogTest}
	#{ColorTest}
	#{CommandDescriptionTest}
	#{ContainerViewTest}
	#{DifferencesPresenterTest}
	#{EvaluationConverterTest}
	#{ExternalPointTest}
	#{ExternalRectangleTest}
	#{FileDialogTest}
	#{FlowLayoutTest}
	#{FolderTest}
	#{FramingLayoutTest}
	#{GridLayoutTest}
	#{IconTest}
	#{ImageViewAbstractTest}
	#{ImageViewTest}
	#{LayoutManagerTest}
	#{LinkButtonTest}
	#{ListBoxTest}
	#{ListControlTest}
	#{ListPresenterTest}
	#{ListViewTest}
	#{MockScintillaView}
	#{MoenTreeViewTest}
	#{MoenTreeViewTest2}
	#{MultilineTextEditTest}
	#{MultipleSelectionListBoxTest}
	#{MultipleSelectionListViewTest}
	#{MultiSelectListBoxTest}
	#{MultiSelectListViewTest}
	#{PluggableColorTest}
	#{Point3DTest}
	#{POINTLTest}
	#{POINTSTest}
	#{PointTest}
	#{PresenterTest}
	#{ProportionalLayoutTest}
	#{PushButtonTest}
	#{RadioButtonSetPresenterTest}
	#{RectangleTest}
	#{RECTLTest}
	#{ReferenceViewTest}
	#{ResourceIdentifierTest}
	#{RichTextEditTest}
	#{ScintillaIndicatorTest}
	#{ScintillaLexerMetadataTest}
	#{ScintillaLexerPropertyTest}
	#{ScintillaViewTest}
	#{ScrollingDecoratorTest}
	#{SelectableItemsTest}
	#{SelectableListItemsTest}
	#{SelectableTreeItemsTest}
	#{SingleSelectListBoxTest}
	#{SingleSelectListViewTest}
	#{SliderTest}
	#{StaticPathTest}
	#{StaticTextTest}
	#{StyledContainerTest}
	#{TabViewTest}
	#{TabViewXPTest}
	#{TextEditTest}
	#{ThemeColorTest}
	#{TreePresenterTest}
	#{TreeViewTest}
	#{TypeConverterTest}
	#{ValueConverterTest}
	#{ViewTest}
	#{VirtualColorTest}
	#{WindowsEventTest}
).

package setMethodNames: #(
	#(#{STLFilerTest} #testRectangleReadWrite)
	#(#{STLFilerTest} #testResourceReadWrite)
	#(#{STLFilerTest} #testShellReadWrite)
).

package setPrerequisites: #(
	'..\Base\Dolphin'
	'..\Base\Dolphin Anonymous Classes'
	'..\Base\Dolphin Base Tests'
	'Base\Dolphin Basic Geometry'
	'Presenters\Boolean\Dolphin Boolean Presenter'
	'Presenters\Choice\Dolphin Choice Presenter'
	'Presenters\Color\Dolphin Color Presenter'
	'Views\Common Controls\Dolphin Common Controls'
	'Dialogs\Common\Dolphin Common Dialogs'
	'Presenters\Date Time\Dolphin Date Time Presenters'
	'Presenters\Difference\Dolphin Differences Presenter'
	'Presenters\Image\Dolphin Image Presenter'
	'..\Base\Dolphin Legacy Date & Time'
	'Models\List\Dolphin List Models'
	'Presenters\List\Dolphin List Presenter'
	'..\System\Filer\Dolphin Literal Filer'
	'..\System\Filer\Dolphin Literal Filer Tests'
	'Metafiles\Dolphin Metafile Records'
	'Views\MoenTree\Dolphin MoenTree View'
	'Deprecated\Dolphin MVP (Deprecated)'
	'Base\Dolphin MVP Base'
	'Presenters\Number\Dolphin Number Presenter'
	'Presenters\Radio\Dolphin Radio Buttons'
	'Presenters\Text\Dolphin Rich Text Presenter'
	'Views\Scintilla\Dolphin Scintilla View'
	'Views\Scrollbars\Dolphin Scrollbars'
	'Views\Slider\Dolphin Slider Control'
	'Views\Styled Views\Dolphin Styled Views'
	'Views\SysLink\Dolphin SysLink Control'
	'Presenters\Text\Dolphin Text Presenter'
	'Models\Tree\Dolphin Tree Models'
	'Presenters\Tree\Dolphin Tree Presenter'
	'Type Converters\Dolphin Type Converters'
	'Models\Value\Dolphin Value Models'
).

package!

"Class Definitions"!

Object subclass: #MockScintillaView
	instanceVariableNames: 'lastStyled tokens text currentTextStyles styleIdMap'
	classVariableNames: ''
	poolDictionaries: 'ScintillaConstants'
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #AbstractContainerViewTest
	instanceVariableNames: 'containerView'
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #AbstractPointTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #AbstractRectangleTest
	instanceVariableNames: 'desktop oddDesktop unary'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ARGBTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #BrushTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #CanvasTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ClipboardTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ColorDialogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ColorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #CommandDescriptionTest
	instanceVariableNames: 'savedKeyboardLayout'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #EvaluationConverterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #FileDialogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #FolderTest
	instanceVariableNames: 'c windows system root oa'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #IconTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #LayoutManagerTest
	instanceVariableNames: 'shell'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #MoenTreeViewTest
	instanceVariableNames: 'treeModel treeView nodeA nodeB nodeC nodeD nodeE nodeF shell scroller useShell'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #MultipleSelectionListBoxTest
	instanceVariableNames: 'box'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #Point3DTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #PresenterTest
	instanceVariableNames: 'presenter'
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #PushButtonTest
	instanceVariableNames: 'shell shellButtonA shellButtonB dialog dialogButtonA dialogButtonB'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #RadioButtonSetPresenterTest
	instanceVariableNames: 'radioSet'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ResourceIdentifierTest
	instanceVariableNames: 'tempViewResource'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ScintillaIndicatorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ScintillaLexerMetadataTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #TypeConverterTest
	instanceVariableNames: 'edit savedLocale'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ValueConverterTest
	instanceVariableNames: 'converter value startTime newTime changed'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #ViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #VirtualColorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
DolphinTest subclass: #WindowsEventTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractContainerViewTest subclass: #ContainerViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'Win32Constants'
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractContainerViewTest subclass: #StyledContainerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractKeyboardTest subclass: #AcceleratorTableTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractPointTest subclass: #ExternalPointTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractPointTest subclass: #PointTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalPointTest subclass: #POINTLTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalPointTest subclass: #POINTSTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractRectangleTest subclass: #ExternalRectangleTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
AbstractRectangleTest subclass: #RectangleTest
	instanceVariableNames: ''
	classVariableNames: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ExternalRectangleTest subclass: #RECTLTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LayoutManagerTest subclass: #BorderLayoutTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LayoutManagerTest subclass: #FlowLayoutTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LayoutManagerTest subclass: #FramingLayoutTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LayoutManagerTest subclass: #GridLayoutTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
LayoutManagerTest subclass: #ProportionalLayoutTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
MultipleSelectionListBoxTest subclass: #MultipleSelectionListViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #AbstractTextEditTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #ChoicePresenterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #DifferencesPresenterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #ImageViewAbstractTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #LinkButtonTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #ReferenceViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #ScrollingDecoratorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #SelectableItemsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #SliderTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #StaticPathTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
PresenterTest subclass: #StaticTextTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractTextEditTest subclass: #MultilineTextEditTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
AbstractTextEditTest subclass: #TextEditTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
MultilineTextEditTest subclass: #RichTextEditTest
	instanceVariableNames: 'savedLocale'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
MultilineTextEditTest subclass: #ScintillaViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ImageViewAbstractTest subclass: #ImageViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SelectableItemsTest subclass: #SelectableListItemsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SelectableItemsTest subclass: #SelectableTreeItemsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SelectableListItemsTest subclass: #ListControlTest
	instanceVariableNames: 'selectionChanged selectionChanging timedout events clicks'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SelectableListItemsTest subclass: #ListPresenterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SelectableListItemsTest subclass: #TabViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ListControlTest subclass: #ListBoxTest
	instanceVariableNames: 'lbnSelChange'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ListControlTest subclass: #ListViewTest
	instanceVariableNames: 'nmClick'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ListBoxTest subclass: #MultiSelectListBoxTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ListBoxTest subclass: #SingleSelectListBoxTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ListViewTest subclass: #MultiSelectListViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ListViewTest subclass: #SingleSelectListViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'ListViewConstants'
	classInstanceVariableNames: ''
	classConstants: {}!
TabViewTest subclass: #TabViewXPTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SelectableTreeItemsTest subclass: #MoenTreeViewTest2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SelectableTreeItemsTest subclass: #TreePresenterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
SelectableTreeItemsTest subclass: #TreeViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
ScintillaLexerMetadataTest subclass: #ScintillaLexerPropertyTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
VirtualColorTest subclass: #PluggableColorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!
VirtualColorTest subclass: #ThemeColorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!STLFilerTest methodsFor!

testRectangleReadWrite
	| contents myRectangle answer |
	myRectangle := 50 @ 50 extent: 200 @ 200.
	contents := self checkSimpleReadWriteOf: myRectangle.
	self assert: (contents includes: Rectangle).
	self assert: (contents includes: Point).

	"Check that muliple references are identical"
	answer := self simpleReadWriteOf: (Array with: myRectangle with: myRectangle).
	self assert: answer first equals: myRectangle.
	self assert: answer first identicalTo: answer last!

testResourceReadWrite
	| rid shell shell1 shell2 in contents1 contents2 |
	rid := ResourceIdentifier class: Shell name: 'Default view'.
	
	[shell := rid loadWithContext: View desktop.
	contents1 := self writeLiteralsFor: shell.
	in := STLInFiler on: contents1 readStream.
	in context: View desktop.
	shell1 := in next.
	self assert: shell1 isKindOf: ShellView.
	self assert: shell1 isOpen.
	contents2 := self writeLiteralsFor: shell1.
	in := STLInFiler on: contents2 readStream.
	in context: View desktop.
	shell2 := in next.
	self assert: shell2 isKindOf: ShellView.
	self assert: shell2 isOpen.
	self assert: contents1 size equals: contents2 size]
			ensure: 
				[shell destroy.
				shell1 destroy.
				shell2 destroy]!

testShellReadWrite
	| shell1 shell2 |
	shell1 := ShellView show.
	[shell2 := self simpleReadWriteOf: shell1 context: View desktop] ensure: 
			[shell1 destroy.
			shell2 destroy].
! !
!STLFilerTest categoriesFor: #testRectangleReadWrite!public!unit tests! !
!STLFilerTest categoriesFor: #testResourceReadWrite!public!unit tests! !
!STLFilerTest categoriesFor: #testShellReadWrite!public!unit tests! !

"End of package definition"!

