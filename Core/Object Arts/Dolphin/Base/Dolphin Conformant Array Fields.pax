| package |
package := Package name: 'Dolphin Conformant Array Fields'.
package paxVersion: 2;
	preDeclareClassesOnLoad: false;
	basicComment: 'Dolphin Conformant Array Fields Package.

Contains support for conformant array fields in structures. Conformant array fields are those where the size of the array is variable and defined by another field in the structure.'.


package setClassNames: #(
	#{ConformantArrayFieldLength}
).

package setMethodNames: #(
	#(#{ArrayField class} #type:lengthField:)
	#(#{ArrayPointerField class} #type:lengthField:)
).

package setPrerequisites: #(
	'Dolphin'
).

package!

"Class Definitions"!

ArrayFieldLength subclass: #ConformantArrayFieldLength
	instanceVariableNames: 'lengthField'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!ArrayField class methodsFor!

type: aClass lengthField: aSymbol
	"Answer a new instance of the receiver which is used for describing embedded conformant
	array objects of type, aClass, where the length is specified by another field of the
	structure being described with the specified <Symbol> name."

	^self type: aClass arrayLength: (ConformantArrayFieldLength lengthField: aSymbol)! !
!ArrayField class categoriesFor: #type:lengthField:!instance creation!public! !

!ArrayPointerField class methodsFor!

type: aClass lengthField: aSymbol
	"Answer a new instance of the receiver which is used for dereferencing pointers to
	conformant arrays objects of type aClass, where the length is specified by the another field
	of the structure with the specified <Symbol> name."

	^self type: aClass arrayLength: (ConformantArrayFieldLength lengthField: aSymbol)! !
!ArrayPointerField class categoriesFor: #type:lengthField:!instance creation!public! !

"End of package definition"!

